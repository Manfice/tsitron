@model tsitron.Domain.Entitys.Goods.Bouquet

@if (TempData["success"] != null)
{
    <div style="color: green">  
        @TempData["success"]
    </div>
}
@if (TempData["error"] != null)
{
    <div style="color: red">
        @TempData["error"]
    </div>
}
@using (Html.BeginForm("UpdateBouquetData","Seller", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Наименование и цена:</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <p class = "control-label col-md-2">Название букета:</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class = "control-label col-md-2">Цена:</p>
            <div class="col-md-10">
                @Html.HiddenFor(model=>model.Price.Id)
                @Html.EditorFor(model => model.Price.PriceValue, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Price.PriceValue, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
